'use client';

import { useState, useRef, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { Send, Loader2, Sparkles, Brain, Zap } from 'lucide-react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Card } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { useAuth } from '@/contexts/AuthContext';

interface Message {
  id: string;
  text: string;
  sender: 'user' | 'lumen';
  timestamp: Date;
}

export default function LumenAIPage() {
  const [messages, setMessages] = useState<Message[]>([]);
  const [input, setInput] = useState('');
  const [isProcessing, setIsProcessing] = useState(false);
  const messagesEndRef = useRef<HTMLDivElement>(null);
  const { userProfile } = useAuth();

  // Prebuilt financial prompts
  const quickPrompts = [
    { id: 1, text: "How can I improve my cash flow?", icon: "üí∞" },
    { id: 2, text: "Show my top clients this quarter", icon: "üë•" },
    { id: 3, text: "What's my revenue trend?", icon: "üìà" },
    { id: 4, text: "Which invoices are overdue?", icon: "‚ö†Ô∏è" },
    { id: 5, text: "Analyze my expenses this month", icon: "üìä" },
    { id: 6, text: "What's my profit margin?", icon: "üíπ" },
  ];

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  useEffect(() => {
    // Initial welcome message
    setMessages([{
      id: '1',
      text: `Hi ${userProfile?.first_name || 'there'}! I'm Lumen, your AI business assistant. I have complete knowledge of the LumenR platform and can help you with:

üè¢ **Business Management**
‚Ä¢ Managing clients and tracking projects
‚Ä¢ Creating quotes and invoices
‚Ä¢ Financial analytics and insights

üìä **Smart Features**
‚Ä¢ Payment tracking and receipts
‚Ä¢ Contract management
‚Ä¢ Calendar and booking synchronization

üí° **AI Capabilities**
‚Ä¢ Natural language commands
‚Ä¢ Business recommendations
‚Ä¢ Data analysis and reporting

üí¨ **Getting Started**
‚Ä¢ Ask me anything about LumenR features
‚Ä¢ Request help with specific tasks
‚Ä¢ Get personalized business insights

What would you like to know or do today?`,
      sender: 'lumen',
      timestamp: new Date()
    }]);
  }, [userProfile]);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!input.trim() || isProcessing) return;

    const messageText = input.trim();
    const userMessage: Message = {
      id: Date.now().toString(),
      text: messageText,
      sender: 'user',
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInput('');
    setIsProcessing(true);

    // Simulate AI response with knowledge about LumenR
    setTimeout(() => {
      const lowerInput = messageText.toLowerCase();
      let response = '';

      // Knowledge base responses about LumenR
      if (lowerInput.includes('client') || lowerInput.includes('customer')) {
        response = "I can help you manage clients! In LumenR:\n\n‚Ä¢ Navigate to **Clients** in the sidebar to view all your clients\n‚Ä¢ Click **+ Add Client** to create a new client\n‚Ä¢ Track client information, contacts, and project history\n‚Ä¢ View client timeline for all interactions\n‚Ä¢ Export client data for reporting\n\nWould you like me to guide you through adding your first client?";
      } else if (lowerInput.includes('invoice')) {
        response = "LumenR makes invoicing simple! Here's how:\n\n‚Ä¢ Go to **Invoices** in the Financial section\n‚Ä¢ Create professional invoices with your branding\n‚Ä¢ Track payment status (Pending, Paid, Overdue)\n‚Ä¢ Send invoices directly to clients\n‚Ä¢ Record payments and generate receipts\n‚Ä¢ Convert quotes to invoices automatically\n\nYou can also track invoice analytics in the Insights section. Need help creating your first invoice?";
      } else if (lowerInput.includes('quote')) {
        response = "Quotes in LumenR help you win more business:\n\n‚Ä¢ Create detailed quotes with line items\n‚Ä¢ Include services, products, and custom items\n‚Ä¢ Set validity periods and terms\n‚Ä¢ Convert approved quotes to invoices instantly\n‚Ä¢ Track quote status and follow-ups\n\nVisit the **Quotes** section to get started!";
      } else if (lowerInput.includes('payment') || lowerInput.includes('receipt')) {
        response = "Managing payments and receipts:\n\n**Payments:**\n‚Ä¢ Track all incoming payments\n‚Ä¢ Link payments to invoices\n‚Ä¢ Support multiple payment methods\n‚Ä¢ Generate payment reports\n\n**Receipts:**\n‚Ä¢ Upload and scan expense receipts\n‚Ä¢ OCR technology extracts data automatically\n‚Ä¢ Organize by category and vendor\n‚Ä¢ Track business expenses for tax time\n\nCheck the **Payments** and **Receipts** sections in your sidebar!";
      } else if (lowerInput.includes('calendar') || lowerInput.includes('booking') || lowerInput.includes('schedule')) {
        response = "LumenR's scheduling features:\n\n**Calendar:**\n‚Ä¢ Sync with Google Calendar or Outlook\n‚Ä¢ View all appointments in one place\n‚Ä¢ Schedule meetings with clients\n\n**Bookings:**\n‚Ä¢ Manage client appointments\n‚Ä¢ Set availability and duration\n‚Ä¢ Send automatic reminders\n‚Ä¢ Track booking history\n\nNavigate to **Calendar** or **Bookings** to manage your schedule!";
      } else if (lowerInput.includes('cash flow') || lowerInput.includes('cashflow')) {
        response = "Here are strategies to improve your cash flow:\n\n**Short-term actions:**\n‚Ä¢ Review and follow up on overdue invoices (check Invoices page)\n‚Ä¢ Offer early payment discounts to encourage faster payments\n‚Ä¢ Set shorter payment terms (e.g., Net 15 instead of Net 30)\n\n**Medium-term strategies:**\n‚Ä¢ Require deposits or partial upfront payments\n‚Ä¢ Automate payment reminders for clients\n‚Ä¢ Negotiate better terms with your suppliers\n\n**Long-term improvements:**\n‚Ä¢ Build a cash reserve (aim for 3-6 months expenses)\n‚Ä¢ Diversify your client base\n‚Ä¢ Consider recurring revenue models\n\nVisit **Financial Insights** to monitor your cash flow trends!";
      } else if (lowerInput.includes('top client') || lowerInput.includes('best client')) {
        response = "To view your top clients:\n\n1. Navigate to **Financial Insights** in the sidebar\n2. Check the \"Top Clients by Revenue\" chart\n3. View detailed client revenue breakdowns\n\nYour top clients are typically those who:\n‚Ä¢ Generate the most revenue\n‚Ä¢ Pay invoices on time\n‚Ä¢ Request recurring services\n‚Ä¢ Refer new business\n\nConsider nurturing these relationships with:\n‚Ä¢ Exclusive offers or loyalty discounts\n‚Ä¢ Priority support\n‚Ä¢ Regular check-ins\n‚Ä¢ Thank you gestures";
      } else if (lowerInput.includes('revenue trend') || lowerInput.includes('revenue growth')) {
        response = "Track your revenue trends:\n\n**In LumenR:**\n‚Ä¢ Visit **Financial Insights** for revenue charts\n‚Ä¢ View monthly/quarterly comparisons\n‚Ä¢ See revenue by client or service\n‚Ä¢ Export data for detailed analysis\n\n**Current performance indicators:**\n‚Ä¢ Month-over-month growth rate\n‚Ä¢ Year-over-year comparison\n‚Ä¢ Average invoice value\n‚Ä¢ Revenue per client\n\n**What to look for:**\n‚úÖ Steady upward trend = healthy growth\n‚ö†Ô∏è Seasonal fluctuations = plan for slow periods\nüî¥ Declining trend = time to adjust strategy\n\nCheck your dashboard for real-time insights!";
      } else if (lowerInput.includes('overdue') || lowerInput.includes('late payment')) {
        response = "Managing overdue invoices:\n\n**View overdue invoices:**\n1. Go to **Invoices** page\n2. Click the **Overdue** tab\n3. See all invoices past their due date\n\n**Follow-up best practices:**\n‚Ä¢ Send friendly reminder emails (automated in Settings)\n‚Ä¢ Call clients for large amounts\n‚Ä¢ Offer payment plans if needed\n‚Ä¢ Consider late fees for persistent issues\n\n**Prevention strategies:**\n‚Ä¢ Set clear payment terms upfront\n‚Ä¢ Send invoices immediately after service\n‚Ä¢ Accept multiple payment methods\n‚Ä¢ Follow up before due date\n\nHead to the Invoices page to take action!";
      } else if (lowerInput.includes('expense') || lowerInput.includes('spending')) {
        response = "Analyze your expenses:\n\n**In LumenR:**\n‚Ä¢ Visit **Receipts** to view all expenses\n‚Ä¢ Check **Financial Insights** for expense breakdown\n‚Ä¢ Filter by category, vendor, or date\n‚Ä¢ Export for tax preparation\n\n**Expense categories tracked:**\n‚Ä¢ Supplies and materials\n‚Ä¢ Software and subscriptions\n‚Ä¢ Travel and transportation\n‚Ä¢ Professional services\n‚Ä¢ Marketing and advertising\n‚Ä¢ Office expenses\n\n**Tips to reduce expenses:**\n‚Ä¢ Review subscriptions monthly\n‚Ä¢ Negotiate with vendors\n‚Ä¢ Buy in bulk when possible\n‚Ä¢ Use tax deductions\n\nVisit the Receipts page to upload and categorize expenses!";
      } else if (lowerInput.includes('profit') || lowerInput.includes('margin')) {
        response = "Understanding your profit margins:\n\n**Profit Margin Formula:**\nProfit Margin = (Revenue - Expenses) / Revenue √ó 100\n\n**In LumenR:**\n‚Ä¢ View **Financial Insights** for profit calculations\n‚Ä¢ Track revenue from Invoices (paid status)\n‚Ä¢ Monitor expenses in Receipts\n‚Ä¢ Calculate net profit margins\n\n**Healthy profit margins:**\n‚Ä¢ Service businesses: 15-30%\n‚Ä¢ Consulting: 20-40%\n‚Ä¢ Premium services: 30-50%\n\n**Improve your margins:**\n‚Ä¢ Increase pricing strategically\n‚Ä¢ Reduce operational costs\n‚Ä¢ Focus on high-margin services\n‚Ä¢ Improve efficiency\n\nCheck your dashboard for current profit metrics!";
      } else if (lowerInput.includes('insight') || lowerInput.includes('analytic') || lowerInput.includes('report')) {
        response = "Get powerful insights with LumenR:\n\n‚Ä¢ Revenue trends and forecasts\n‚Ä¢ Client growth analysis\n‚Ä¢ Invoice payment tracking\n‚Ä¢ Top clients by revenue\n‚Ä¢ Monthly/quarterly comparisons\n‚Ä¢ Expense categorization\n‚Ä¢ Profit margins\n\nVisit **Financial Insights** to see your business performance dashboard!";
      } else if (lowerInput.includes('contract')) {
        response = "Contract management made easy:\n\n‚Ä¢ Store all contracts in one place\n‚Ä¢ E-signature integration\n‚Ä¢ Track contract terms and renewals\n‚Ä¢ Link contracts to clients and projects\n‚Ä¢ Set expiration reminders\n\nAccess **Contracts** from the Financial section!";
      } else if (lowerInput.includes('setting') || lowerInput.includes('profile')) {
        response = "Customize your LumenR experience:\n\n‚Ä¢ Update your business profile and branding\n‚Ä¢ Configure invoice templates\n‚Ä¢ Set tax rates and currency\n‚Ä¢ Manage team members and permissions\n‚Ä¢ Integration settings\n‚Ä¢ Notification preferences\n\nHead to **Settings** to personalize your workspace!";
      } else if (lowerInput.includes('help') || lowerInput.includes('how')) {
        response = "I'm here to help! I can assist you with:\n\n‚Ä¢ Navigating LumenR features\n‚Ä¢ Creating and managing business documents\n‚Ä¢ Understanding analytics and reports\n‚Ä¢ Setting up integrations\n‚Ä¢ Best practices for business management\n‚Ä¢ Troubleshooting common issues\n\nJust ask me anything specific, or tell me what you'd like to accomplish!";
      } else {
        response = `I understand you're asking about "${messageText}". While I'm still learning, here's what I can help you with in LumenR:

‚Ä¢ **Clients** - Manage your customer relationships
‚Ä¢ **Financial** - Quotes, Invoices, Contracts, Receipts, Payments
‚Ä¢ **Schedule** - Bookings and Calendar integration
‚Ä¢ **Insights** - Business analytics and reporting
‚Ä¢ **Settings** - Customize your workspace

Try asking me something specific like "How do I create an invoice?" or "Tell me about client management!"`;
      }

      const lumenMessage: Message = {
        id: (Date.now() + 1).toString(),
        text: response,
        sender: 'lumen',
        timestamp: new Date()
      };

      setMessages(prev => [...prev, lumenMessage]);
      setIsProcessing(false);
    }, 1000);
  };

  return (
    <div className="container mx-auto p-4 md:p-6 max-w-5xl">
      <div className="mb-6">
        <div className="flex items-center gap-3 mb-2">
          <div className="h-12 w-12 rounded-full bg-gradient-to-r from-purple-600 to-blue-600 flex items-center justify-center">
            <Brain className="h-6 w-6 text-white" />
          </div>
          <div>
            <h1 className="text-3xl font-bold">Lumen AI Assistant</h1>
            <p className="text-sm text-muted-foreground">Your intelligent business companion with complete LumenR knowledge</p>
          </div>
        </div>
        
        <div className="flex gap-2 mt-4">
          <Badge variant="secondary" className="gap-1">
            <Sparkles className="h-3 w-3" />
            AI-Powered
          </Badge>
          <Badge variant="secondary" className="gap-1">
            <Zap className="h-3 w-3" />
            Real-time Help
          </Badge>
        </div>
      </div>

      <Card className="bg-card border-border backdrop-blur-xl overflow-hidden shadow-2xl rounded-3xl">
        {/* Quick Prompts Section */}
        <div className="p-4 border-b border-border bg-muted/30">
          <p className="text-xs font-semibold text-muted-foreground mb-3 uppercase tracking-wide">üí° Quick Financial Insights</p>
          <div className="grid grid-cols-2 md:grid-cols-3 gap-2">
            {quickPrompts.map((prompt) => (
              <Button
                key={prompt.id}
                variant="outline"
                size="sm"
                onClick={() => {
                  setInput(prompt.text);
                  setTimeout(() => {
                    const form = document.querySelector('form');
                    if (form) {
                      form.requestSubmit();
                    }
                  }, 100);
                }}
                className="justify-start text-left h-auto py-2 px-3 hover:bg-purple-500/10 hover:border-purple-500/50"
                disabled={isProcessing}
              >
                <span className="mr-2">{prompt.icon}</span>
                <span className="text-xs line-clamp-2">{prompt.text}</span>
              </Button>
            ))}
          </div>
        </div>

        {/* Messages Area */}
        <div className="h-[600px] overflow-y-auto p-6 space-y-4">
          <AnimatePresence>
            {messages.map((message) => (
              <motion.div
                key={message.id}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}
              >
                <div
                  className={`max-w-[80%] rounded-2xl px-4 py-3 ${
                    message.sender === 'user'
                      ? 'bg-purple-600 text-white'
                      : 'bg-muted'
                  }`}
                >
                  {message.sender === 'lumen' && (
                    <div className="flex items-center gap-2 mb-2">
                      <Brain className="h-4 w-4 text-purple-600" />
                      <span className="text-xs font-semibold text-purple-600">Lumen AI</span>
                    </div>
                  )}
                  <p className="text-sm whitespace-pre-line">{message.text}</p>
                  <p className="text-xs mt-2 opacity-70">
                    {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                  </p>
                </div>
              </motion.div>
            ))}
          </AnimatePresence>
          
          {isProcessing && (
            <motion.div
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              className="flex justify-start"
            >
              <div className="bg-muted rounded-2xl px-4 py-3">
                <div className="flex items-center gap-2">
                  <Loader2 className="h-4 w-4 animate-spin text-purple-600" />
                  <span className="text-sm text-muted-foreground">Lumen is thinking...</span>
                </div>
              </div>
            </motion.div>
          )}
          
          <div ref={messagesEndRef} />
        </div>

        {/* Input Area */}
        <div className="border-t border-border p-4">
          <form onSubmit={handleSubmit} className="flex gap-2">
            <Input
              value={input}
              onChange={(e) => setInput(e.target.value)}
              placeholder="Ask Lumen anything about LumenR..."
              className="flex-1"
              disabled={isProcessing}
            />
            <Button
              type="submit"
              size="icon"
              className="bg-purple-600 hover:bg-purple-700 text-white"
              disabled={!input.trim() || isProcessing}
            >
              {isProcessing ? (
                <Loader2 className="h-4 w-4 animate-spin" />
              ) : (
                <Send className="h-4 w-4" />
              )}
            </Button>
          </form>
          <p className="text-xs text-muted-foreground mt-2 text-center">
            Lumen AI has complete knowledge of all LumenR features and can guide you through any task
          </p>
        </div>
      </Card>
    </div>
  );
}
